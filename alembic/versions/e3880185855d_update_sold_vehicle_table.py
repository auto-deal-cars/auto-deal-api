"""update sold vehicle table

Revision ID: e3880185855d
Revises: f17157f38461
Create Date: 2024-06-18 23:55:02.232634

"""
from typing import Sequence, Union

from alembic import op
from sqlalchemy.dialects import postgresql
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e3880185855d'
down_revision: Union[str, None] = 'f17157f38461'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    status_enum = postgresql.ENUM('draft', 'sold', name='status_enum')
    status_enum.create(op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('vehicle_sold', sa.Column('status', sa.Enum('draft', 'sold', name='status_enum'), nullable=False))
    op.alter_column('vehicle_sold', 'sold_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('vehicle_sold', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_unique_constraint(None, 'vehicle_sold', ['vehicle_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vehicle_sold', type_='unique')
    op.alter_column('vehicle_sold', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('vehicle_sold', 'sold_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.drop_column('vehicle_sold', 'status')
    # ### end Alembic commands ###
    status_enum = postgresql.ENUM('draft', 'sold', name='status_enum')
    status_enum.drop(op.get_bind())
